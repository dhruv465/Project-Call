apiVersion: apps/v1
kind: Deployment
metadata:
  name: lumina-api-gateway
  namespace: lumina-outreach
  labels:
    app: lumina-outreach
    component: api-gateway
spec:
  replicas: 3
  selector:
    matchLabels:
      app: lumina-outreach
      component: api-gateway
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: lumina-outreach
        component: api-gateway
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: api-gateway
        image: ${REGISTRY}/lumina-api-gateway:${TAG}
        imagePullPolicy: Always
        env:
        - name: NODE_ENV
          value: "production"
        - name: API_GATEWAY_PORT
          value: "3000"
        - name: LOG_LEVEL
          value: "info"
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: lumina-secrets
              key: redis_url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: lumina-secrets
              key: jwt_secret
        - name: CORS_ORIGIN
          value: "https://app.luminaoutreach.com"
        # Performance tuning
        - name: NODE_OPTIONS
          value: "--max-old-space-size=2048 --max-http-header-size=16384"
        ports:
        - containerPort: 3000
          name: http
        - containerPort: 8080
          name: ws
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 1
            memory: 1Gi
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: lumina-api-gateway
  namespace: lumina-outreach
  labels:
    app: lumina-outreach
    component: api-gateway
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: ws
  selector:
    app: lumina-outreach
    component: api-gateway
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: lumina-api-gateway-hpa
  namespace: lumina-outreach
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: lumina-api-gateway
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lumina-api-gateway-ingress
  namespace: lumina-outreach
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - api.luminaoutreach.com
    secretName: lumina-api-tls
  rules:
  - host: api.luminaoutreach.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: lumina-api-gateway
            port:
              number: 80
