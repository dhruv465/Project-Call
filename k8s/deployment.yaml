apiVersion: apps/v1
kind: Deployment
name: project-call-api
metadata:
  name: project-call-api
  labels:
    app: project-call
    component: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: project-call
      component: api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: project-call
        component: api
    spec:
      containers:
      - name: api
        image: ${REGISTRY}/project-call-api:${TAG}
        ports:
        - containerPort: 3001
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3001"
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: project-call-secrets
              key: mongodb_uri
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: project-call-config
              key: redis_host
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: project-call-config
              key: redis_port
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: project-call-secrets
              key: redis_password
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 30
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: project-call-media
  labels:
    app: project-call
    component: media
spec:
  replicas: 2
  selector:
    matchLabels:
      app: project-call
      component: media
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: project-call
        component: media
    spec:
      containers:
      - name: media
        image: ${REGISTRY}/project-call-media:${TAG}
        ports:
        - containerPort: 3002
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3002"
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: project-call-config
              key: redis_host
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: project-call-config
              key: redis_port
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: project-call-secrets
              key: redis_password
        - name: DEEPGRAM_API_KEY
          valueFrom:
            secretKeyRef:
              name: project-call-secrets
              key: deepgram_api_key
        - name: ELEVENLABS_API_KEY
          valueFrom:
            secretKeyRef:
              name: project-call-secrets
              key: elevenlabs_api_key
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 2
            memory: 2Gi
        readinessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 30
          periodSeconds: 30
        volumeMounts:
        - name: media-storage
          mountPath: /app/uploads
      volumes:
      - name: media-storage
        persistentVolumeClaim:
          claimName: project-call-media-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: project-call-worker
  labels:
    app: project-call
    component: worker
spec:
  replicas: 2
  selector:
    matchLabels:
      app: project-call
      component: worker
  template:
    metadata:
      labels:
        app: project-call
        component: worker
    spec:
      containers:
      - name: worker
        image: ${REGISTRY}/project-call-worker:${TAG}
        env:
        - name: NODE_ENV
          value: "production"
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: project-call-secrets
              key: mongodb_uri
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: project-call-config
              key: redis_host
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: project-call-config
              key: redis_port
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: project-call-secrets
              key: redis_password
        resources:
          requests:
            cpu: 300m
            memory: 512Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
        - name: worker-logs
          mountPath: /app/logs
      volumes:
      - name: worker-logs
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: project-call-client
  labels:
    app: project-call
    component: client
spec:
  replicas: 2
  selector:
    matchLabels:
      app: project-call
      component: client
  template:
    metadata:
      labels:
        app: project-call
        component: client
    spec:
      containers:
      - name: client
        image: ${REGISTRY}/project-call-client:${TAG}
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 300m
            memory: 256Mi
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: project-call-api
  labels:
    app: project-call
    component: api
spec:
  selector:
    app: project-call
    component: api
  ports:
  - port: 80
    targetPort: 3001
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: project-call-media
  labels:
    app: project-call
    component: media
spec:
  selector:
    app: project-call
    component: media
  ports:
  - port: 80
    targetPort: 3002
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: project-call-client
  labels:
    app: project-call
    component: client
spec:
  selector:
    app: project-call
    component: client
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: project-call-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - app.luminaoutreach.com
    secretName: luminaoutreach-tls
  rules:
  - host: app.luminaoutreach.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: project-call-api
            port:
              number: 80
      - path: /media
        pathType: Prefix
        backend:
          service:
            name: project-call-media
            port:
              number: 80
      - path: /
        pathType: Prefix
        backend:
          service:
            name: project-call-client
            port:
              number: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: project-call-api-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: project-call-api
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: project-call-media-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: project-call-media
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: project-call-media-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: project-call-config
data:
  redis_host: "redis-master"
  redis_port: "6379"
---
apiVersion: v1
kind: Secret
metadata:
  name: project-call-secrets
type: Opaque
data:
  mongodb_uri: ${BASE64_MONGODB_URI}
  redis_password: ${BASE64_REDIS_PASSWORD}
  deepgram_api_key: ${BASE64_DEEPGRAM_API_KEY}
  elevenlabs_api_key: ${BASE64_ELEVENLABS_API_KEY}
